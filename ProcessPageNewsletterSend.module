<?php

/**
 * ProcessPageNewsletterSend
 *
 * By Nico Knoll (http://www.nico.is/)
 *
 */

class ProcessPageNewsletterSend extends Process {

	public static function getModuleInfo() {
		return array(
			'title' => __('Newsletter Quick Send Link'), 
			'version' => '1.00',
			'summary' => __('Adds a send link to the newsletters in the page list. Not required but could be useful.'),
			'permission' => 'page-newsletter',
			'autoload' => true ,
			'requires' => array('ProcessNewsletter')
		);
	}

	public function init() {
		parent::init();
	}

	public function ready() {		
		$process = wire('page')->process;
		
		if($process == 'ProcessPageList') {
			$this->addHookAfter("ProcessPageListRender::getPageActions", $this, 'hookPageListActions');
		}
	}

	public function hookPageListActions(HookEvent $event) {
		$page = $event->arguments[0];

		if($page->template->name == 'pw_newsletter' && $this->user->hasPermission('page-newsletter')) {

			$actions = $event->return;

			$new_action = array(
				'cn' => 'send',
				'name' => __('Send'),
				'url' => $this->config->urls->admin . "setup/newsletter/send/?id=".$page->id
			);

			$actions = $this->array_insert($actions, ((int) count($actions)), $new_action);

			$event->return = $actions;
		}
	}


	/* --- module un-/installation part --- */

	public function ___install() {

		if(ProcessWire::versionMajor == 2 && ProcessWire::versionMinor < 4) {
			throw new WireException($this->_("This module requires ProcessWire 2.5 or newer")); 
		}
		
		$parent = $this->pages->get("name=page,parent=".$this->config->adminRootPageID);
		$page = new Page();
		$page->parent = $parent; 
		$page->template = $this->templates->get('admin');
		$page->name = "send"; 
		$page->title = "Send Newsletter";
		$page->process = $this; 
		$page->sort = $parent->numChildren;
		$page->save();
		$this->message(sprintf($this->_("Installed to %s"), $page->path)); 
	}


	public function ___uninstall() {
		$parent = $this->pages->get("name=page,parent=".$this->config->adminRootPageID);
		$page = $parent->child("name=delete");

		if($page->id) { 
			$this->message(sprintf($this->_("Removed %s"), $page->path));
			$this->pages->delete($page); 
		}
	}


	/* --- helper functions --- */

	private function array_insert($array, $pos, $val) {
	   $array2 = array_splice($array,$pos);
	   $array[] = $val;
	   $array = array_merge($array,$array2);

	   return $array;
	}
}